<?php
	
	include "/../../../../wp-load.php";
	
	//INIT VARS
	global $search_key;
	global $json;
	global $json_option_key;
	global $json_last_date;
	global $json_alread_sent;
	
	global $user_details;
	
	global $current_time;
	
	global $total_days;
	global $total_hours;
	
	global $result;
	global $res;
	
	//SET THE SEARCH KEY
	//DO NOT DELETE/EDIT THIS:
	$search_key = 'ezy_7td8xf_gf_';
	
	$total_days = 0;
	$total_hours = 0;
	
	echo ezy_check_temp_data();
	
	function ezy_check_temp_data()
	{		
		//INIT VARS
		global $search_key;
		global $json;
		global $json_option_key;
		global $json_last_date;
		global $json_alread_sent;
		
		global $user_details;
		
		global $current_time;
		
		global $total_days;
		global $total_hours;
		
		global $result;
		global $res;
		
		global $wpdb;

		//GET ALL RECORDS WITH THE $search_key PREFIX ON THEM
		$sql = 'SELECT option_name, option_value FROM '.$wpdb->prefix.'options WHERE option_name LIKE "'.$search_key.'%"';
		//EXEC SQL
		$query = $wpdb->get_results( $sql );
		
		if ( $query )
		{
			foreach ( $query as $query_result ) 
			{
				
				//GET JSON VALUES
				$json = json_decode( $query_result->option_value );
				
				$json_option_key = $json->option_key;
				$json_last_date = $json->last_date;
				$json_alread_sent = $json->email_sent;
				
				//GET WORDPRESS CURRENT TIME : ( DASHBOARD > SETTINGS > GENERAL )
				$current_time = current_time( 'mysql' );
				
				$date1 = new DateTime( $json_last_date);
				$date2 = new DateTime( $current_time );
				
				//GET INTERVALS
				$interval = $date1->diff( $date2 );
				//$result .= "Difference: " . $interval->y . " years, " . $interval->m." months, ".$interval->d." days, ".$interval->h." hours, ".$interval->i." minues, ".$interval->s." seconds<br>"; 
				
				//COMPUTE FOR TOTAL HOURS
				$total_days = $interval->d * 24;
				$total_hours = $total_days + $interval->h;
				
				if ( $total_hours >= 24 && $total_hours < 48 ) //24 hours but not greater than 48 hours
				{
					//SEND NOTIFICATIONS
					$user_details = $json->user_details;
					
					//ONLY SEND NOTIFICATION EMAIL IF NOT YET SENT
					if ( $json_alread_sent == 0 )
					{
						//PREPARE SENDING EMAIL
						$result = ezy_send_mail( $user_details->login, $user_details->email );
					}
				}
				elseif ( $total_hours >= 48 ) //48 hours or more
				{
					// ------------ DELETE TEMP DATA ENTRY ------------
					//DELETE THE TEMP DATA GENERATED BY GRAVITY FORMS
					$wpdb->delete( $wpdb->prefix.'options', array( 'option_name' => $json_option_key ) );
					
					//DELETE THE DATA GENERATED BY EZYVA functions (See: functions.php)
					$wpdb->delete( $wpdb->prefix.'options', array( 'option_name' => $search_key.$json_option_key ) );
					
					if ( $result != '' )
					{
						$result .= '<br>';
					}
					
					$result .= $json_option_key.' was deleted successfully.<br>';
					
				}
				else //less than 24 hours
				{
					//DO NOTHING
				}
				
				//$result .= 'Total Hours: '.$total_hours.' <br>'.$res.'<br>';
				
			}
			
			return $result;
			
		}
	}
	
	function ezy_send_mail( $login, $email  )
	{
		
		//INIT VARS
		//$headers = '';
		
		//ADMIN EMAIL
		$admin_email = 'mon-carlo@ezyva.com';
		$from_name = 'Paratus Pty Ltd';
		
		//RECIPIENT
		$to = $email;
		$name = $login;
		
		//MESSAGE DETAILS
		$subject = '[Paratus Pty Ltd] Incomplete Order Form Notification';
		$your_message = 'Hi '.$name.",<br /><br />You recently started to complete an order on the Paratus website, but did not finish it.<br/>If you wish to complete it, please login and resume your order within the next 24 hours otherwise the incomeplete data will be deleted.
						If you have questions or enquiries, please contact us at: ".'<a href="mailto:info@paratus.com.au">info@paratus.com.au</a>.<br /><br />Thank you,<br />The Paratus Team';
		
		//set your HTML message here or from an external file containing your HTML (get the file's contents).
		$message_html = '<!DOCTYPE HTML>
		<html>
		<head>
		<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
		<title>'.$subject.'</title>
		</head>
		<body>
		<h2>Notification From '.$from_name.'</h2>
		<p>'.$your_message.'</p>
		</body>
		</html>';
		
		
		$your_message = "Hi ".$name.",\r\n\r\nYou recently started to complete an order on the Paratus website, but did not finish it.\r\nIf you wish to complete it, please login and resume your order within the next 24 hours otherwise the incomeplete data will be deleted.
						If you have questions or enquiries, please contact us at: info@paratus.com.au\r\n\r\nThank you,\r\nThe Paratus Team";
	
		$message_txt = 'Notification From '.$from_name."\r\n".$your_message;
		
		//RUN PHPMAILER
		$res = init_phpMailer( $admin_email, $from_name, $to, $name, $subject, $message_html, $message_txt );
		
		if ( $res == true )
		{
			$result .= setFlag_EmailAlreadySent();
		}
		
		return $result;
	}
	
	function init_phpMailer($from_email, $from_name, $to_email, $to_name = '', $subject, $body_html, $body_text)
	{
		//require_once 'phpmailer/PHPMailerAutoload.php';
		
		$result = false;
		
		$mail = new PHPMailer;
		
		$mail->isSMTP();                                      // Set mailer to use SMTP
		$mail->Host = 'gator4127.hostgator.com';  // Specify main and backup server
		$mail->SMTPAuth = true;                               // Enable SMTP authentication
		$mail->Username = 'mon-carlo@ezyva.com';                            // SMTP username
		$mail->Password = 'supermon123';                           // SMTP password
		$mail->SMTPSecure = 'tls';                            // Enable encryption, 'ssl' also accepted
		
		$mail->From = $from_email;
		$mail->FromName = $from_name;
		
		if ( $to_name != '' )
		{
			$mail->addAddress( $to_email , $to_name);  // Add a recipient
		}
		else
		{
			$mail->addAddress( $to_email );  // Add a recipient
		}
		
		$mail->isHTML(true);                                  // Set email format to HTML
		
		$mail->Subject = $subject;
		$mail->Body    = $body_html; //This is the HTML message body
		$mail->AltBody = $body_text; //This is the body in plain text for non-HTML mail clients
		
		if( !$mail->send() )
		{
			$result = false; //.= "Message could not be sent.\n\rMailer Error: " . $mail->ErrorInfo;
		}
		else
		{
			$result = true;  //.= 'Message has been sent';
		}
		
		return $result;
	}
	
	function setFlag_EmailAlreadySent()
	{
		//INIT VARS
		global $search_key;
		global $json;
		global $json_option_key;
		global $json_last_date;
		global $json_alread_sent;
		
		global $user_details;
		
		global $current_time;
		
		global $total_days;
		global $total_hours;
		
		global $result;
		global $res;
		
		$data = array( 'option_key' => $json_option_key, 'last_date' => $json_last_date, 'user_details' => array( 'login' => $user_details->login, 'email' => $user_details->email ), 'email_sent' => '1' );
		
		update_option($search_key.$json_option_key, json_encode($data));	
		
		return '';//'set_flag_called_'.$search_key.$json_option_key;
	}
	
?>